{"ast":null,"code":"var _jsxFileName = \"/Users/sonjong-il/Desktop/wecode/12-AIG-frontend/src/pages/Reviews/components/ReviewList.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { API, reviewsTestToken } from '../../../config';\nexport default function ReviewList({\n  reviewData,\n  setReviewData\n}) {\n  const {\n    login\n  } = useSelector(state => ({\n    login: state.login\n  }));\n  const [editedDescription, setEditedDescription] = useState();\n  const [editedTitle, setEditedTitle] = useState();\n\n  const getUserId = email => {\n    const userName = email.split('@')[0];\n    return [...userName].map((letter, index) => index > 2 ? '*' : letter);\n  };\n\n  const fetchReviewData = async (api, requestOptions) => {\n    const res = await fetch(api, requestOptions);\n    const {\n      data\n    } = await res.json();\n    setReviewData(data);\n  };\n\n  const editReviewData = (method, reviewId, title, description) => {\n    const requestOptions = {\n      method,\n      headers: {\n        Authorization: reviewsTestToken\n      },\n      body: JSON.stringify({\n        reviewId,\n        title,\n        description\n      })\n    };\n    fetchReviewData(`${API}/reviews`, requestOptions);\n  };\n\n  const removeReviewData = (method, reviewId) => {\n    const requestOptions = {\n      method,\n      headers: {\n        Authorization: reviewsTestToken\n      }\n    };\n    fetchReviewData(`${API}/reviews/${reviewId}`, requestOptions);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, reviewData === null || reviewData === void 0 ? void 0 : reviewData.map(review => {\n    const {\n      reviewId,\n      email,\n      grade,\n      imageUrl,\n      title,\n      description,\n      date,\n      product,\n      isLoggedInUser,\n      isEditing\n    } = review;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: reviewId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Info, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, getUserId(email)), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, product), /*#__PURE__*/React.createElement(Grade, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, '★'.repeat(grade) + '☆'.repeat(5 - grade))), /*#__PURE__*/React.createElement(Review, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"\\uB9AC\\uBDF0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      contentEditable: isEditing,\n      suppressContentEditableWarning: true,\n      onKeyUp: e => {\n        setEditedTitle(e.target.innerText);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(Description, {\n      contentEditable: isEditing,\n      suppressContentEditableWarning: true,\n      onKeyUp: e => {\n        setEditedDescription(e.target.innerText);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, description))), /*#__PURE__*/React.createElement(Date, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, date), login && isLoggedInUser && /*#__PURE__*/React.createElement(ButtonContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => {\n        setReviewData(reviewData.map(el => {\n          if (reviewId === el.reviewId) {\n            return { ...el,\n              isEditing: !el.isEditing\n            };\n          }\n\n          return el;\n        }));\n\n        if (e.target.innerText === 'Save') {\n          editReviewData('PATCH', reviewId, editedTitle, editedDescription);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, isEditing ? 'Save' : 'Edit'), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        removeReviewData('DELETE', reviewId);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, \"Remove\")));\n  }));\n}\nconst Container = styled.ul`\n  width: 1280px;\n  margin: 100px auto 0;\n\n  li {\n    position: relative;\n    ${({\n  theme\n}) => theme.flex('space-between')}\n    padding: 65px 0;\n  }\n`;\nconst Info = styled.div`\n  flex: 1;\n  ${({\n  theme\n}) => theme.flex(null, null, 'column')}\n\n  span:not(:last-child) {\n    padding-bottom: 20px;\n  }\n`;\nconst Grade = styled.span`\n  font-size: 18px;\n  font-family: 'IBMPlexSansKR-Regular';\n`;\nconst Review = styled.div`\n  flex: 3;\n  display: flex;\n`;\nconst Image = styled.div`\n  min-width: 170px;\n  margin-right: 20px;\n\n  img {\n    width: 170px;\n    height: 170px;\n    object-fit: cover;\n  }\n`;\nconst Title = styled.h4`\n  font-weight: bold;\n  padding-bottom: 20px;\n`;\nconst Description = styled.p`\n  line-height: 24px;\n`;\nconst Date = styled.span`\n  flex: 1;\n  text-align: right;\n`;\nconst ButtonContainer = styled.div`\n  position: absolute;\n  right: 0;\n  top: 100px;\n  display: flex;\n\n  button {\n    padding: 10px;\n    background: #000;\n    color: #fff;\n    cursor: pointer;\n\n    &:last-child {\n      margin-left: 10px;\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/sonjong-il/Desktop/wecode/12-AIG-frontend/src/pages/Reviews/components/ReviewList.js"],"names":["React","useState","styled","useSelector","API","reviewsTestToken","ReviewList","reviewData","setReviewData","login","state","editedDescription","setEditedDescription","editedTitle","setEditedTitle","getUserId","email","userName","split","map","letter","index","fetchReviewData","api","requestOptions","res","fetch","data","json","editReviewData","method","reviewId","title","description","headers","Authorization","body","JSON","stringify","removeReviewData","review","grade","imageUrl","date","product","isLoggedInUser","isEditing","repeat","e","target","innerText","el","Container","ul","theme","flex","Info","div","Grade","span","Review","Image","Title","h4","Description","p","Date","ButtonContainer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { API, reviewsTestToken } from '../../../config';\n\nexport default function ReviewList({ reviewData, setReviewData }) {\n  const { login } = useSelector((state) => ({\n    login: state.login,\n  }));\n\n  const [editedDescription, setEditedDescription] = useState();\n  const [editedTitle, setEditedTitle] = useState();\n\n  const getUserId = (email) => {\n    const userName = email.split('@')[0];\n    return [...userName].map((letter, index) => (index > 2 ? '*' : letter));\n  };\n\n  const fetchReviewData = async (api, requestOptions) => {\n    const res = await fetch(api, requestOptions);\n    const { data } = await res.json();\n    setReviewData(data);\n  };\n\n  const editReviewData = (method, reviewId, title, description) => {\n    const requestOptions = {\n      method,\n      headers: {\n        Authorization: reviewsTestToken,\n      },\n      body: JSON.stringify({\n        reviewId,\n        title,\n        description,\n      }),\n    };\n\n    fetchReviewData(`${API}/reviews`, requestOptions);\n  };\n\n  const removeReviewData = (method, reviewId) => {\n    const requestOptions = {\n      method,\n      headers: {\n        Authorization: reviewsTestToken,\n      },\n    };\n\n    fetchReviewData(`${API}/reviews/${reviewId}`, requestOptions);\n  };\n\n  return (\n    <Container>\n      {reviewData?.map((review) => {\n        const {\n          reviewId,\n          email,\n          grade,\n          imageUrl,\n          title,\n          description,\n          date,\n          product,\n          isLoggedInUser,\n          isEditing,\n        } = review;\n        return (\n          <li key={reviewId}>\n            <Info>\n              <span>{getUserId(email)}</span>\n              <span>{product}</span>\n              <Grade>{'★'.repeat(grade) + '☆'.repeat(5 - grade)}</Grade>\n            </Info>\n            <Review>\n              <Image>\n                <img src={imageUrl} alt=\"리뷰\" />\n              </Image>\n              <div>\n                <Title\n                  contentEditable={isEditing}\n                  suppressContentEditableWarning\n                  onKeyUp={(e) => {\n                    setEditedTitle(e.target.innerText);\n                  }}\n                >\n                  {title}\n                </Title>\n                <Description\n                  contentEditable={isEditing}\n                  suppressContentEditableWarning\n                  onKeyUp={(e) => {\n                    setEditedDescription(e.target.innerText);\n                  }}\n                >\n                  {description}\n                </Description>\n              </div>\n            </Review>\n            <Date>{date}</Date>\n            {login && isLoggedInUser && (\n              <ButtonContainer>\n                <button\n                  onClick={(e) => {\n                    setReviewData(\n                      reviewData.map((el) => {\n                        if (reviewId === el.reviewId) {\n                          return { ...el, isEditing: !el.isEditing };\n                        }\n                        return el;\n                      })\n                    );\n\n                    if (e.target.innerText === 'Save') {\n                      editReviewData(\n                        'PATCH',\n                        reviewId,\n                        editedTitle,\n                        editedDescription\n                      );\n                    }\n                  }}\n                >\n                  {isEditing ? 'Save' : 'Edit'}\n                </button>\n                <button\n                  onClick={() => {\n                    removeReviewData('DELETE', reviewId);\n                  }}\n                >\n                  Remove\n                </button>\n              </ButtonContainer>\n            )}\n          </li>\n        );\n      })}\n    </Container>\n  );\n}\n\nconst Container = styled.ul`\n  width: 1280px;\n  margin: 100px auto 0;\n\n  li {\n    position: relative;\n    ${({ theme }) => theme.flex('space-between')}\n    padding: 65px 0;\n  }\n`;\n\nconst Info = styled.div`\n  flex: 1;\n  ${({ theme }) => theme.flex(null, null, 'column')}\n\n  span:not(:last-child) {\n    padding-bottom: 20px;\n  }\n`;\n\nconst Grade = styled.span`\n  font-size: 18px;\n  font-family: 'IBMPlexSansKR-Regular';\n`;\n\nconst Review = styled.div`\n  flex: 3;\n  display: flex;\n`;\n\nconst Image = styled.div`\n  min-width: 170px;\n  margin-right: 20px;\n\n  img {\n    width: 170px;\n    height: 170px;\n    object-fit: cover;\n  }\n`;\n\nconst Title = styled.h4`\n  font-weight: bold;\n  padding-bottom: 20px;\n`;\nconst Description = styled.p`\n  line-height: 24px;\n`;\n\nconst Date = styled.span`\n  flex: 1;\n  text-align: right;\n`;\n\nconst ButtonContainer = styled.div`\n  position: absolute;\n  right: 0;\n  top: 100px;\n  display: flex;\n\n  button {\n    padding: 10px;\n    background: #000;\n    color: #fff;\n    cursor: pointer;\n\n    &:last-child {\n      margin-left: 10px;\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}