{"ast":null,"code":"var _jsxFileName = \"/Users/sonjong-il/Desktop/wecode/12-AIG-frontend/src/pages/ItemList/ItemList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SimpleSlider from \"./component/SimpleSlider\";\nimport Popover from \"react-popover\";\nimport styled from \"styled-components\";\nimport { API } from \"../../config\";\nimport { FilterCount } from './component/FilterCount';\nimport { ItemsData } from \"./component/ItemsData\";\nimport { FilterList } from \"./component/FilterList\";\nimport { DEFAULT_COLORS, DEFAULT_MATERIALS } from \"./constants\";\nimport Nav from \"../../../src/components/Nav\";\nexport default function ItemList(props) {\n  const [popover, setPopover] = useState(false);\n  const [listData, setListData] = useState([]);\n  const [categoryFilter, setCategoryFilter] = useState(\"\");\n  const [colorFilter, setColorFilter] = useState(DEFAULT_COLORS);\n  const [materialFilter, setMaterialFilter] = useState(DEFAULT_MATERIALS);\n  useEffect(() => {\n    axios.get(`${API}/products`).then(res => setListData(res.data.data));\n  }, []);\n  useEffect(() => {\n    const selectedColors = Object.keys(colorFilter).filter(el => !!colorFilter[el]);\n    const colorQuery = selectedColors.map(el => \"&color=\" + el);\n    const selectedMaterials = Object.keys(materialFilter).filter(el => !!materialFilter[el]);\n    const materialQuery = selectedMaterials.map(el => \"&material=\" + el);\n    const combinedQuery = colorQuery + materialQuery + categoryFilter;\n    console.log(combinedQuery.length);\n    axios.get(`${API}/products?${combinedQuery.split(\",\").join(\"\")}`).then(res => setListData(res.data.data));\n  }, [categoryFilter, colorFilter, materialFilter]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SimpleSlider, {\n    updateItems: setListData,\n    setCategoryFilter: setCategoryFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FilterContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterCount, {\n    listData: listData,\n    setCategoryFilter: setCategoryFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Popover, {\n    isOpen: popover,\n    place: \"below\",\n    body: /*#__PURE__*/React.createElement(FilterList, {\n      updateItems: setListData,\n      closePopover: () => setPopover(false),\n      colorFilter: colorFilter,\n      setColorFilter: setColorFilter,\n      materialFilter: materialFilter,\n      setMaterialFilter: setMaterialFilter,\n      setCategoryFilter: setCategoryFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"filter\",\n    onClick: () => setPopover(!popover),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Filter\"))), /*#__PURE__*/React.createElement(ItemsData, {\n    data: listData,\n    onButtonClick: setListData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n}\nconst FilterContainer = styled.section`\n  display: flex;\n  justify-content: flex-end;\n  margin-right: 10px;\n`;","map":{"version":3,"sources":["/Users/sonjong-il/Desktop/wecode/12-AIG-frontend/src/pages/ItemList/ItemList.js"],"names":["React","useState","useEffect","axios","SimpleSlider","Popover","styled","API","FilterCount","ItemsData","FilterList","DEFAULT_COLORS","DEFAULT_MATERIALS","Nav","ItemList","props","popover","setPopover","listData","setListData","categoryFilter","setCategoryFilter","colorFilter","setColorFilter","materialFilter","setMaterialFilter","get","then","res","data","selectedColors","Object","keys","filter","el","colorQuery","map","selectedMaterials","materialQuery","combinedQuery","console","log","length","split","join","FilterContainer","section"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SimpleSlider from \"./component/SimpleSlider\";\nimport Popover from \"react-popover\";\nimport styled from \"styled-components\";\nimport { API } from \"../../config\";\nimport { FilterCount } from './component/FilterCount';\nimport { ItemsData } from \"./component/ItemsData\";\nimport { FilterList } from \"./component/FilterList\";\nimport { DEFAULT_COLORS, DEFAULT_MATERIALS } from \"./constants\";\nimport Nav from \"../../../src/components/Nav\";\n\nexport default function ItemList(props) {\n  const [popover, setPopover] = useState(false);\n  const [listData, setListData] = useState([]);\n  const [categoryFilter, setCategoryFilter] = useState(\"\");\n  const [colorFilter, setColorFilter] = useState(DEFAULT_COLORS);\n  const [materialFilter, setMaterialFilter] = useState(DEFAULT_MATERIALS);\n\n  useEffect(() => {\n    axios.get(`${API}/products`).then((res) => setListData(res.data.data));\n  }, []);\n\n  useEffect(() => {\n    const selectedColors = Object.keys(colorFilter).filter(\n      (el) => !!colorFilter[el]\n    );\n    const colorQuery = selectedColors.map((el) => \"&color=\" + el);\n    const selectedMaterials = Object.keys(materialFilter).filter(\n      (el) => !!materialFilter[el]\n    );\n    const materialQuery = selectedMaterials.map((el) => \"&material=\" + el);\n\n    const combinedQuery = colorQuery + materialQuery + categoryFilter;\n    console.log(combinedQuery.length)\n    axios\n      .get(`${API}/products?${combinedQuery.split(\",\").join(\"\")}`)\n      .then((res) => setListData(res.data.data));\n  }, [categoryFilter, colorFilter, materialFilter]);\n\n  return (\n    <>\n      <Nav />\n      <SimpleSlider\n        updateItems={setListData}\n        setCategoryFilter={setCategoryFilter}\n      />\n      <FilterContainer>\n        <FilterCount listData={listData}  setCategoryFilter={setCategoryFilter}/>\n        <Popover\n          isOpen={popover}\n          place=\"below\"\n          body={\n            <FilterList\n              updateItems={setListData}\n              closePopover={() => setPopover(false)}\n              colorFilter={colorFilter}\n              setColorFilter={setColorFilter}\n              materialFilter={materialFilter}\n              setMaterialFilter={setMaterialFilter}\n              setCategoryFilter={setCategoryFilter}\n            />\n          }\n        >\n          <button className=\"filter\" onClick={() => setPopover(!popover)}>\n            Filter\n          </button>\n        </Popover>\n      </FilterContainer>\n      <ItemsData data={listData} onButtonClick={setListData} />\n    </>\n  );\n}\n\nconst FilterContainer = styled.section`\n  display: flex;\n  justify-content: flex-end;\n  margin-right: 10px;\n`;\n"]},"metadata":{},"sourceType":"module"}