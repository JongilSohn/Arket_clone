{"ast":null,"code":"var _jsxFileName = \"/Users/sonjong-il/Desktop/wecode/12-AIG-frontend/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BsCheckBox } from 'react-icons/bs';\nimport { RiKakaoTalkFill } from 'react-icons/ri';\nimport KaKaoLogin from 'react-kakao-login';\nimport { API, kakaoKey } from '../config';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../modules/login';\nimport { getItems } from '../modules/cart';\nexport default function Login({\n  option,\n  setOption\n}) {\n  const dispatch = useDispatch();\n  const [inputs, setInputs] = useState({\n    email: '',\n    password: ''\n  });\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs({ ...inputs,\n      [name]: value\n    });\n  };\n\n  const history = useHistory();\n\n  const fetchLogin = async () => {\n    try {\n      const result = await fetch(`${API}/user/signin`, {\n        method: 'post',\n        body: JSON.stringify({\n          email: inputs.email,\n          password: inputs.password\n        })\n      });\n      const {\n        access_token\n      } = await result.json();\n\n      if (access_token) {\n        localStorage.setItem('token', access_token);\n        alert('Sign in successful!!');\n        await fetchCart();\n        history.push('/');\n        setOption([false, false, false]);\n        setInputs({ ...inputs,\n          email: '',\n          password: ''\n        });\n        dispatch(logIn());\n      } else {\n        alert('Sign in unsuccessful : Please check your email and password');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchCart = async () => {\n    try {\n      const result = await fetch(`${API}/cart`, {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      const cartData = await result.json();\n      dispatch(getItems(cartData.data));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchKakao = async response => {\n    try {\n      const result = await fetch(`${API}/user/kakaosignin`, {\n        method: 'POST',\n        headers: {\n          Authorization: response.access_token\n        }\n      });\n      const {\n        access_token\n      } = await result.json();\n\n      if ({\n        access_token\n      }) {\n        localStorage.setItem('token', access_token);\n        await fetchCart();\n        history.push('/');\n        setOption([false, false, false]);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const clickLogin = event => {\n    event.preventDefault();\n    fetchLogin();\n  };\n\n  return /*#__PURE__*/React.createElement(SignInBox, {\n    option: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SignInContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SignInTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SignInForm, {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"SIGN IN\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RegistrationForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"CREATE ACCOUNT\"))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LoginForm, {\n    action: \"\",\n    method: \"POST\",\n    className: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EmailBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SignInEmail, {\n    onChange: onChange,\n    type: \"text\",\n    id: \"fname\",\n    name: \"email\",\n    value: inputs.email,\n    placeholder: \"Email\",\n    required: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(PasswordBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SignInPassword, {\n    onChange: onChange,\n    type: \"password\",\n    id: \"lname\",\n    name: \"password\",\n    value: inputs.password,\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ShowButton, {\n    on: true,\n    type: \"button\",\n    className: \"a-button-nostyle toggle-password-state password-visible\",\n    \"data-show-text\": \"Show\",\n    \"data-hide-text\": \"Hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"Show\")), /*#__PURE__*/React.createElement(CheckBoxInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BsCheckBox, {\n    style: {\n      marginRight: '10'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }), \"Keep me signed in\"), /*#__PURE__*/React.createElement(ContinueButton, {\n    onClick: clickLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, \"Continue\")), /*#__PURE__*/React.createElement(KakaoButton, {\n    jsKey: kakaoKey,\n    onSuccess: ({\n      response\n    }) => fetchKakao(response),\n    onFailure: response => console.log(response),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RiKakaoTalkFill, {\n    style: {\n      marginRight: '5'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"KakaoTalk Login\")), /*#__PURE__*/React.createElement(ResetPasswordBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ResetPassword, {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"RESET PASSWORD\"))))));\n}\nconst LoginForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 312px;\n`;\nconst SignInBox = styled.div`\n  z-index: 1;\n  position: absolute;\n  display: ${({\n  option\n}) => option[1] ? 'flex' : 'none'};\n  width: 350px;\n  right: 64px;\n  top: 56px;\n  padding: 24px 0 15px;\n  background-color: white;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\n`;\nconst SignInContent = styled.div`\n  max-height: calc(100vh - 56px - 43px);\n  padding: 0 19px;\n`;\nconst SignInTab = styled.ul`\n  display: flex;\n`;\nconst SignInForm = styled.a`\n  width: auto;\n  font-size: 11px;\n  font-weight: 600;\n  cursor: pointer;\n  letter-spacing: 0.5px;\n`;\nconst EmailBox = styled.div`\n  min-height: 75px;\n`;\nconst SignInEmail = styled.input`\n  font-size: 20px;\n  line-height: 22px;\n  font-weight: 400;\n  height: 38px;\n  width: 100%;\n  border-bottom: 1px solid #000;\n  margin-top: 10px;\n  margin-bottom: 2px;\n  cursor: text;\n  appearance: textfield;\n`;\nconst PasswordBox = styled.div`\n  height: 80px;\n`;\nconst SignInPassword = styled.input`\n  font-size: 20px;\n  line-height: 22px;\n  font-weight: 400;\n  height: 38px;\n  width: 100%;\n  border-bottom: 1px solid #000;\n  margin-bottom: 2px;\n  padding-right: 45px;\n  cursor: text;\n  appearance: textfield;\n`;\nconst ShowButton = styled.button`\n  color: #babbbc;\n  position: absolute;\n  top: 123px;\n  right: 15px;\n  font-size: 13px;\n  cursor: pointer;\n`;\nconst CheckBoxInput = styled.div`\n  font-size: 14px;\n  margin: 10px 0 24px;\n  width: 75%;\n`;\nconst ContinueButton = styled.button`\n  border: none;\n  background-color: #000;\n  color: white;\n  font-size: 20px;\n  text-align: center;\n  display: block;\n  line-height: 50px;\n  padding: 0 20px;\n  width: 100%;\n  height: 50px;\n  margin-bottom: 10px;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nconst KakaoButton = styled(KaKaoLogin)`\n  border: none;\n  background-color: #ffe812;\n  color: black;\n  font-size: 20px;\n  text-align: center;\n  display: block;\n  line-height: 50px;\n  padding: 0 20px;\n  width: 100%;\n  height: 50px;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nconst RegistrationForm = styled.a`\n  position: absolute;\n  right: 20px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n  width: auto;\n  font-size: 11px;\n  font-weight: 600;\n  letter-spacing: 0.5px;\n  cursor: pointer;\n`;\nconst ResetPasswordBox = styled.div`\n  color: #7b7b7b;\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 24px;\n  text-align: center;\n  letter-spacing: 0.5px;\n  width: 100%;\n  margin: 19px 0 0;\n  cursor: pointer;\n`;\nconst ResetPassword = styled.a``;","map":{"version":3,"sources":["/Users/sonjong-il/Desktop/wecode/12-AIG-frontend/src/components/Login.js"],"names":["React","useState","useHistory","styled","BsCheckBox","RiKakaoTalkFill","KaKaoLogin","API","kakaoKey","useDispatch","logIn","getItems","Login","option","setOption","dispatch","inputs","setInputs","email","password","onChange","e","name","value","target","history","fetchLogin","result","fetch","method","body","JSON","stringify","access_token","json","localStorage","setItem","alert","fetchCart","push","err","console","log","headers","Authorization","getItem","cartData","data","fetchKakao","response","clickLogin","event","preventDefault","marginRight","LoginForm","form","SignInBox","div","SignInContent","SignInTab","ul","SignInForm","a","EmailBox","SignInEmail","input","PasswordBox","SignInPassword","ShowButton","button","CheckBoxInput","ContinueButton","KakaoButton","RegistrationForm","ResetPasswordBox","ResetPassword"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BsCheckBox } from 'react-icons/bs';\nimport { RiKakaoTalkFill } from 'react-icons/ri';\nimport KaKaoLogin from 'react-kakao-login';\nimport { API, kakaoKey } from '../config';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../modules/login';\nimport { getItems } from '../modules/cart';\n\nexport default function Login({ option, setOption }) {\n  const dispatch = useDispatch();\n  const [inputs, setInputs] = useState({\n    email: '',\n    password: '',\n  });\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n\n    setInputs({ ...inputs, [name]: value });\n  };\n  const history = useHistory();\n\n  const fetchLogin = async () => {\n    try {\n      const result = await fetch(`${API}/user/signin`, {\n        method: 'post',\n        body: JSON.stringify({\n          email: inputs.email,\n          password: inputs.password,\n        }),\n      });\n      const { access_token } = await result.json();\n      if (access_token) {\n        localStorage.setItem('token', access_token);\n        alert('Sign in successful!!');\n        await fetchCart();\n        history.push('/');\n        setOption([false, false, false]);\n        setInputs({ ...inputs, email: '', password: '' });\n        dispatch(logIn());\n      } else {\n        alert('Sign in unsuccessful : Please check your email and password');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchCart = async () => {\n    try {\n      const result = await fetch(`${API}/cart`, {\n        headers: {\n          Authorization: localStorage.getItem('token'),\n        },\n      });\n      const cartData = await result.json();\n      dispatch(getItems(cartData.data));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchKakao = async (response) => {\n    try {\n      const result = await fetch(`${API}/user/kakaosignin`, {\n        method: 'POST',\n        headers: {\n          Authorization: response.access_token,\n        },\n      });\n      const { access_token } = await result.json();\n      if ({ access_token }) {\n        localStorage.setItem('token', access_token);\n        await fetchCart();\n        history.push('/');\n        setOption([false, false, false]);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const clickLogin = (event) => {\n    event.preventDefault();\n    fetchLogin();\n  };\n\n  return (\n    <SignInBox option={option}>\n      <SignInContent>\n        <SignInTab>\n          <li>\n            <SignInForm href=\"\">SIGN IN</SignInForm>\n          </li>\n          <li>\n            <RegistrationForm>CREATE ACCOUNT</RegistrationForm>\n          </li>\n        </SignInTab>\n        <>\n          <LoginForm action=\"\" method=\"POST\" className=\"email\">\n            <EmailBox>\n              <SignInEmail\n                onChange={onChange}\n                type=\"text\"\n                id=\"fname\"\n                name=\"email\"\n                value={inputs.email}\n                placeholder=\"Email\"\n                required=\"required\"\n              />\n            </EmailBox>\n            <PasswordBox>\n              <SignInPassword\n                onChange={onChange}\n                type=\"password\"\n                id=\"lname\"\n                name=\"password\"\n                value={inputs.password}\n                placeholder=\"Password\"\n              />\n              <ShowButton\n                on\n                type=\"button\"\n                className=\"a-button-nostyle toggle-password-state password-visible\"\n                data-show-text=\"Show\"\n                data-hide-text=\"Hide\"\n              >\n                Show\n              </ShowButton>\n            </PasswordBox>\n            <CheckBoxInput>\n              <BsCheckBox style={{ marginRight: '10' }} />\n              Keep me signed in\n            </CheckBoxInput>\n            <ContinueButton onClick={clickLogin}>\n              <span>Continue</span>\n            </ContinueButton>\n            <KakaoButton\n              jsKey={kakaoKey}\n              onSuccess={({ response }) => fetchKakao(response)}\n              onFailure={(response) => console.log(response)}\n            >\n              <RiKakaoTalkFill style={{ marginRight: '5' }} />\n              <span>KakaoTalk Login</span>\n            </KakaoButton>\n            <ResetPasswordBox>\n              <ResetPassword href=\"\">RESET PASSWORD</ResetPassword>\n            </ResetPasswordBox>\n          </LoginForm>\n        </>\n      </SignInContent>\n    </SignInBox>\n  );\n}\nconst LoginForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 312px;\n`;\nconst SignInBox = styled.div`\n  z-index: 1;\n  position: absolute;\n  display: ${({ option }) => (option[1] ? 'flex' : 'none')};\n  width: 350px;\n  right: 64px;\n  top: 56px;\n  padding: 24px 0 15px;\n  background-color: white;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\n`;\n\nconst SignInContent = styled.div`\n  max-height: calc(100vh - 56px - 43px);\n  padding: 0 19px;\n`;\n\nconst SignInTab = styled.ul`\n  display: flex;\n`;\nconst SignInForm = styled.a`\n  width: auto;\n  font-size: 11px;\n  font-weight: 600;\n  cursor: pointer;\n  letter-spacing: 0.5px;\n`;\n\nconst EmailBox = styled.div`\n  min-height: 75px;\n`;\n\nconst SignInEmail = styled.input`\n  font-size: 20px;\n  line-height: 22px;\n  font-weight: 400;\n  height: 38px;\n  width: 100%;\n  border-bottom: 1px solid #000;\n  margin-top: 10px;\n  margin-bottom: 2px;\n  cursor: text;\n  appearance: textfield;\n`;\n\nconst PasswordBox = styled.div`\n  height: 80px;\n`;\n\nconst SignInPassword = styled.input`\n  font-size: 20px;\n  line-height: 22px;\n  font-weight: 400;\n  height: 38px;\n  width: 100%;\n  border-bottom: 1px solid #000;\n  margin-bottom: 2px;\n  padding-right: 45px;\n  cursor: text;\n  appearance: textfield;\n`;\n\nconst ShowButton = styled.button`\n  color: #babbbc;\n  position: absolute;\n  top: 123px;\n  right: 15px;\n  font-size: 13px;\n  cursor: pointer;\n`;\nconst CheckBoxInput = styled.div`\n  font-size: 14px;\n  margin: 10px 0 24px;\n  width: 75%;\n`;\n\nconst ContinueButton = styled.button`\n  border: none;\n  background-color: #000;\n  color: white;\n  font-size: 20px;\n  text-align: center;\n  display: block;\n  line-height: 50px;\n  padding: 0 20px;\n  width: 100%;\n  height: 50px;\n  margin-bottom: 10px;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst KakaoButton = styled(KaKaoLogin)`\n  border: none;\n  background-color: #ffe812;\n  color: black;\n  font-size: 20px;\n  text-align: center;\n  display: block;\n  line-height: 50px;\n  padding: 0 20px;\n  width: 100%;\n  height: 50px;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst RegistrationForm = styled.a`\n  position: absolute;\n  right: 20px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n  width: auto;\n  font-size: 11px;\n  font-weight: 600;\n  letter-spacing: 0.5px;\n  cursor: pointer;\n`;\n\nconst ResetPasswordBox = styled.div`\n  color: #7b7b7b;\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 24px;\n  text-align: center;\n  letter-spacing: 0.5px;\n  width: 100%;\n  margin: 19px 0 0;\n  cursor: pointer;\n`;\n\nconst ResetPassword = styled.a``;\n"]},"metadata":{},"sourceType":"module"}